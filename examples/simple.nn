int foo();
int foo() {
	return 1;
}

struct name {
	float a;
	double b;
	int c : 8;
	string d;
}

union uname {
	int a;
	float b;
}

enum cutlery {FORK, SPOON, SPORK, TINY_ONE_POINT_FORK}

# $main
int main(string[] arg) {
	int[] arr = [1, 2, 3, 4, 5, 6];
	
	enum not_cutlery {WHAT, IS, THIS}
	
	cutlery c = cutlery.SPOON;
	
	int bar() {
		raise X_2;
	}
	
	try:
		bar();
	catch (sig b) {
		else {
			if b != bar.X_2 {
				raise THIS_AINT_GOOD;
			}
		}
	}
	
	switch c {
		case cutlery.FORK {
			return -1;
		}
		case cutlery.SPORK continue;
		else do break;
	} 
	
	int sol = 0;
	for int i : arr {
		sol += i;
	}
	
	for int i = 1, 4 {
		sol -= i;
	}
	
	for int i = 0; i < 5; ++i {
		sol *= i;
	}
	
	int one, float two = 1, <float> 2;
	
	while int itwo = <int> two; one > 0 {
		one -= itwo;
	}
	
	int nothing = ---;
	char some_char = 'b';
	string some_string = "Do me this favor";
	
	if true {
		return 1;
	} else if nothing == 0 {
		raise BAD_STUFF;
	} else {
		raise WHAT_THE_FUCK;
	}
}